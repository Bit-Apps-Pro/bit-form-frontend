!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?module.exports=o():"function"==typeof define&&define.amd?define(o):(e="undefined"!=typeof globalThis?globalThis:e||self).isFormValidatedWithoutError=o()}(this,(function(){"use strict";return async function(e,o){if("undefined"!=typeof validateForm&&!validateForm({form:e}))return new Promise(((e,o)=>{o(new Error("Form is not valid"))}));const t=document.getElementById(e);t.classList.add("pos-rel","form-loading");const n=new FormData(document.getElementById(`form-${e}`)),a=window.bf_globals[e],{grecaptcha:i}=window;if("v3"===a?.gRecaptchaVersion&&a?.gRecaptchaSiteKey){const e=await i.execute(a?.gRecaptchaSiteKey,{action:"submit"});n.append("g-recaptcha-response",e)}const r=new URL(a.ajaxURL);r.searchParams.append("action","bitforms_before_submit_validate");const s=await fetch(r,{method:"POST",body:n}),c=await s.json();return t.classList.remove("pos-rel","form-loading"),c.success?new Promise((e=>{e(!0)})):(o(c,e),new Promise(((e,o)=>{o(new Error("Form is not valid"))})))}}));
