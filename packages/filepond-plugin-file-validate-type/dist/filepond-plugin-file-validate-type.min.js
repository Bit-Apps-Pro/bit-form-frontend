!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).filepond_plugin_file_validate_type=t()}(this,(function(){"use strict";
/*!
   * FilePondPluginFileValidateType 1.2.8
   * Licensed under MIT, https://opensource.org/licenses/MIT/
   * Please visit https://pqina.nl/filepond/ for details.
   */const e=e=>{let{addFilter:t,utils:n}=e;const{Type:i,isString:l,replaceInString:T,guesstimateMimeType:E,getExtensionFromFilename:o,getFilenameFromURL:_}=n,a=(e,t)=>e.some((e=>{return/\*$/.test(e)?(n=e,(/^[^/]+/.exec(t)||[]).pop()===n.slice(0,-2)):e===t;var n})),s=(e,t,n)=>{if(0===t.length)return!0;const i=(e=>{let t="";if(l(e)){const n=_(e),i=o(n);i&&(t=E(i))}else t=e.type;return t})(e);return n?new Promise(((l,T)=>{n(e,i).then((e=>{a(t,e)?l():T()})).catch(T)})):a(t,i)};return t("SET_ATTRIBUTE_TO_OPTION_MAP",(e=>Object.assign(e,{accept:"acceptedFileTypes"}))),t("ALLOW_HOPPER_ITEM",((e,t)=>{let{query:n}=t;return!n("GET_ALLOW_FILE_TYPE_VALIDATION")||s(e,n("GET_ACCEPTED_FILE_TYPES"))})),t("LOAD_FILE",((e,t)=>{let{query:n}=t;return new Promise(((t,i)=>{if(!n("GET_ALLOW_FILE_TYPE_VALIDATION"))return void t(e);const l=n("GET_ACCEPTED_FILE_TYPES"),E=n("GET_FILE_VALIDATE_TYPE_DETECT_TYPE"),o=s(e,l,E),_=()=>{const e=l.map((t=n("GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES_MAP"),e=>null!==t[e]&&(t[e]||e))).filter((e=>!1!==e));var t;const E=e.filter((function(t,n){return e.indexOf(t)===n}));i({status:{main:n("GET_LABEL_FILE_TYPE_NOT_ALLOWED"),sub:T(n("GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES"),{allTypes:E.join(", "),allButLastType:E.slice(0,-1).join(", "),lastType:E[e.length-1]})}})};if("boolean"==typeof o)return o?t(e):_();o.then((()=>{t(e)})).catch(_)}))})),{options:{allowFileTypeValidation:[!0,i.BOOLEAN],acceptedFileTypes:[[],i.ARRAY],labelFileTypeNotAllowed:["File is of invalid type",i.STRING],fileValidateTypeLabelExpectedTypes:["Expects {allButLastType} or {lastType}",i.STRING],fileValidateTypeLabelExpectedTypesMap:[{},i.OBJECT],fileValidateTypeDetectType:[null,i.FUNCTION]}}};return"undefined"!=typeof window&&void 0!==window.document&&document.dispatchEvent(new CustomEvent("FilePond:pluginloaded",{detail:e})),e}));
