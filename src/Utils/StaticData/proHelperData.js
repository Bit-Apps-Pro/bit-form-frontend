import { __ } from '../i18nwrap'

const proHelperData = {
  'advanced-file-up': { heading: __('Advanced File Upload Field'), featureText: __('Advanced File Upload Field') },
  paypal: { heading: __('PayPal Payment Field'), featureText: __('PayPal Payment Field') },
  razorpay: { heading: __('Razorpay Payment Field'), featureText: __('Razorpay Payment Field') },
  leadingIcon: { heading: __('Leading Icon'), featureText: __('Leading Icon') },
  trailingIcon: { heading: __('Trailing Icon'), featureText: __('Trailing Icon') },
  inputIcons: { heading: __('Input Icons'), featureText: __('Input Icons') },
  defaultValue: { heading: __('Default Value'), featureText: __('Default Value') },
  suggestion: { heading: __('Suggestions'), featureText: __('Suggestions') },
  inputMode: { heading: __('Input Mode'), featureText: __('Input Mode') },
  regexPattern: { heading: __('Regex Pattern'), featureText: __('Regex Pattern') },
  hidden: { heading: __('Hidden'), featureText: __('Hidden') },
  readOnly: { heading: __('Read Only'), featureText: __('Read Only') },
  disabled: { heading: __('Disabled'), featureText: __('Disabled') },
  entryUnique: { heading: __('Unique Entry'), featureText: __('Unique Entry') },
  userUnique: { heading: __('User Unique'), featureText: __('User Unique') },
  validation: { heading: __('Input Validation'), featureText: __('Input Validation') },
  maximumOption: { heading: __('Maximum Option Validation'), featureText: __('Maximum Option Validation') },
  mimimumOption: { heading: __('Minimum Option Validation'), featureText: __('Minimum Option Validation') },
  optionColumn: { heading: __('Option Column'), featureText: __('Option Column') },
  otherOption: { heading: __('Other Option'), featureText: __('Other Option') },
  searchPlaceholder: { heading: __('Search Placeholder Modify'), featureText: __('Search Placeholder Modify') },
  selectedOptImage: { heading: __('Selected Option Image'), featureText: __('Showing Selected Option Image') },
  optionIcon: { heading: __('Option Icon/Image'), featureText: __('Showing Icon/Image in option') },
  minMaxOpt: { heading: __('Minimum and Maximum Option'), featureText: __('Minimum and Maximum Option validation') },
  listHeight: { heading: __('List Height'), featureText: __('Option List Height') },
  detectCountryByIp: { heading: __('Detect Country by IP'), featureText: __('Detect Country by IP') },
  detectCountryByGeo: { heading: __('Detect Country by Geo Location'), featureText: __('Detect Country by Geo Location') },
  optionList: { heading: __('Multiple Option List'), featureText: __('Multiple Option List') },
  minMaxValue: { heading: __('Minimum and Maximum Value'), featureText: __('Minimum and Maximum Value Validation') },
  inputFormatOptions: { heading: __('Input Format Options'), featureText: __('Input Format Options') },
  valueFormatOptions: { heading: __('Value Format Options'), featureText: __('Value Format Options') },
  countryNotFoundText: { heading: __('Country Not Found Text'), featureText: __('Country Not Found Text Modify') },
  currencyNotFoundText: { heading: __('Currency Not Found Text'), featureText: __('Currency Not Found Text Modify') },
  fileSelectStatus: { heading: __('File Select Status'), featureText: __('Modification of File Select Status') },
  showMaxSize: { heading: __('Show Max Size'), featureText: __('Show Max Size') },
  showFileList: { heading: __('Show File List'), featureText: __('Show File List') },
  fileExistMsg: { heading: __('File Exist Message'), featureText: __('File Exist Message') },
  individualStyle: { heading: __('Individual Style'), featureText: __('Individual Field Styling') },
  customClassAttr: { heading: __('Custom Class & Attribute'), featureText: __('Custom Classes and Attributes') },
  customCode: { heading: __('Custom JS and CSS Editor'), featureText: __('Custom JS and CSS Code Editor') },
  breakPoint: { heading: __('Breakpoint Modification'), featureText: __('Breakpoint width size modification') },
  formWidth: { heading: __('Form Width Modification'), featureText: __('Form Width Modification') },
  fieldClone: { heading: __('Field Clone'), featureText: __('Field Cloning') },
  disableEntryStoring: { heading: __('Disable Entry Storing'), featureText: __('Disable Entry Storing') },
  captureGCLID: { heading: __('Google Ads'), featureText: __('Capture Google Ads Click') },
  is_login: { heading: __('Login User'), featureText: __('Login User') },
  empty_submission: { heading: __('Empty Submission'), featureText: __('Empty Submission') },
  private_ip: { heading: __('Allowed IP'), featureText: __('Allowed IP List') },
  blocked_ip: { heading: __('Blocked IP'), featureText: __('Blocked IP List') },
  entryLimit: { heading: __('Entry Limit'), featureText: __('Entry Limit') },
  singleEntry: { heading: __('Single Entry for each IP'), featureText: __('Single Entry for each IP') },
  honeypot: { heading: __('Honeypot trap'), featureText: __('Honeypot trap') },
}

export default proHelperData
